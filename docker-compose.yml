version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: pg_de
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U de_user" ]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: de_user
      POSTGRES_PASSWORD: de_pass
      POSTGRES_DB: de_weather
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - de_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_de
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    networks:
      - de_net

  airflow:
    image: apache/airflow:2.9.1-python3.11
    container_name: airflow_de
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://de_user:de_pass@postgres:5432/de_weather
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      PYTHONPATH: /opt/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    entrypoint: >
      bash -c "
      airflow db migrate &&
      airflow users create --username airflow --password airflow --firstname Air --lastname Flow --role Admin --email airflow@example.com &&
      airflow scheduler & 
      exec airflow webserver"
    ports:
      - "8085:8080"
    networks:
      - de_net

volumes:
  pg_data:

networks:
  de_net:
